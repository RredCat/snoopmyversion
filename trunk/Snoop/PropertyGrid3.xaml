<Grid
	xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation'
	xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml'
	x:Class='Snoop.PropertyGrid3'
	xmlns:my='clr-namespace:Snoop'
	x:Name='PropertyGrid'
	MinHeight="35" MinWidth="0">

	<Grid.Resources>
		<ResourceDictionary>
			
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Icons.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<DataTemplate x:Key='UnselectedValueTemplate'>
				<TextBlock Text='{Binding Value}'/>
			</DataTemplate>

			<DataTemplate x:Key='SelectedValueTemplate'>
				<my:EditTextBox Height='15' Text='{Binding StringValue}' HorizontalAlignment='Left' Padding='1' BorderThickness='0' Background='White' VerticalContentAlignment='Center'/>
			</DataTemplate>

			<ContextMenu x:Key='PropertyMenu'>
				<MenuItem Header='Remove it' Command='{x:Static my:PropertyGrid3.RemoveIt}' CommandParameter='{Binding}'/>
				<MenuItem Header='Remove all' Command='{x:Static my:PropertyGrid3.RemoveAll}' CommandParameter='{Binding}'/>
			</ContextMenu>
		
		</ResourceDictionary>
	</Grid.Resources>

	<ListView MinHeight="0" MinWidth="0" x:Name="ListView" Grid.Column="1" Grid.Row="2" IsSynchronizedWithCurrentItem="True"
						ItemsSource='{Binding ElementName=PropertyGrid, Path=Properties}'
						HorizontalContentAlignment='Stretch'
						SelectedItem='{Binding ElementName=PropertyGrid, Path=Selection, Mode=TwoWay}'
						Grid.RowSpan="2"
						my:DragDropHelper.IsDropTarget="true"
						>
		<ListView.ItemContainerStyle>
			<Style TargetType='{x:Type ListViewItem}'>
				<Style.Triggers>
					<DataTrigger Binding='{Binding IsLocallySet}' Value='False'>
						<Setter Property='Foreground' Value='Gray'/>
					</DataTrigger>
					<DataTrigger Binding='{Binding IsExpression}' Value='True'>
						<Setter Property='Background' Value='LightGreen'/>
					</DataTrigger>
					<DataTrigger Binding='{Binding IsAnimated}' Value='True'>
						<Setter Property='Background' Value='LightSalmon'/>
					</DataTrigger>
					<DataTrigger Binding='{Binding IsInvalidBinding}' Value='True'>
						<Setter Property='Background' Value='Red'/>
					</DataTrigger>
					<DataTrigger Binding='{Binding IsVisible}' Value='False'>
						<Setter Property='Visibility' Value='Collapsed'/>
					</DataTrigger>
					<Trigger Property='IsSelected' Value='True'>
						<Setter Property='Background' Value='LightGray'/>
					</Trigger>
					<DataTrigger Binding='{Binding HasChangedRecently}' Value='True'>
						<Setter Property='Background' Value='Yellow'/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ListView.ItemContainerStyle>
		
		<ListView.View>
			<GridView>
				<GridViewColumn Header="Source" Width='200'>
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<TextBlock ToolTip='Source' Margin='2' Text='{Binding Target}'
									   ContextMenu='{StaticResource PropertyMenu}'
									   />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
				<GridViewColumn Header="Name" Width='200' >
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text='{Binding DisplayName}'
								ToolTip='{Binding DisplayName}' Height='15' 
								ContextMenu='{StaticResource PropertyMenu}'/>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
				<GridViewColumn Header="Value" Width='143'>
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<ContentControl Name='ValueHolder' ToolTip='{Binding StringValue}' ContentTemplate='{StaticResource UnselectedValueTemplate}' Content='{Binding}'/>
							<DataTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding='{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}' Value='True'/>
										<Condition Binding='{Binding CanEdit}' Value='True'/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName='ValueHolder' Property='ContentTemplate' Value='{StaticResource SelectedValueTemplate}'/>
								</MultiDataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
				<GridViewColumn Header="ValueSource" Width='143'>
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text='{Binding ValueSource.BaseValueSource}' ToolTip='{Binding ValueSource}' Height='15'/>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
			</GridView>
		</ListView.View>
		
	</ListView>
</Grid>